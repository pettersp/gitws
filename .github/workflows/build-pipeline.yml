name: AccentureWorkshop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  #schedule:
  # # This example triggers the workflow every day at 5:30 and 17:30 UTC:
  # # * is a special character in YAML so you have to quote this string
  #  - cron:  '30 5,17 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
      - name: Run typescript lint and format check
        run: npm run lint:ts
      - name: Run styles lint and format check
        run: npm run lint:css
      #- name: Run tests
      #  run: npm test
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
      #- name: Use a secret
      #  run: echo "My guilty pleasure is $SECRET, but i pretend it is $not-a-secret"
      #  env:
      #    SECRET: ${{ secrets.PASSWORD }}
      #    not-a-secret: Eurovision
      - name: Build
        run: npm run build
      - name: Deploy ðŸš€
        if: github.ref == 'refs/heads/develop'
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: dist
  #security:
  #  needs: deploy
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Test for public javascript library vulnerabilities on your site
  #      uses: lirantal/is-website-vulnerable@master
  #      with:
  #        scan-url: " https://<you-username>.github.io/"

  # push-to-docker:
  #     if: github.event_name != 'pull_request'
  #     needs: build
  #     name: Push Docker image to Docker Hub
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Check out your code
  #       uses: actions/checkout@v2
      
  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
      
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: my-docker-hub-namespace/my-docker-hub-repository
          
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}